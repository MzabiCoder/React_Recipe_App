{"version":3,"sources":["componets/tempList.js","componets/tempDetails.js","componets/Details.js","componets/Recipe.js","componets/Search.js","componets/List.js","App.js","serviceWorker.js","index.js"],"names":["recipes","recipe_id","image_url","title","publisher","source_url","recipe","f2f_url","ingredients","publisher_url","Details","state","id","console","log","fetch","concat","this","props","data","json","jsonData","setState","_context","t0","handleIndex","_this$state$recipe","react_default","a","createElement","Fragment","className","onClick","src","alt","href","target","rel","map","val","index","key","Component","Recipe","_this$props$recipe","handleDetails","style","height","class","Search","_this$props","handlechange","hundleSubmit","value","Object","defineProperty","onSubmit","onChange","type","name","placeholder","List","Search_Search","Recipe_Recipe","App","url","details_id","pageN","search","base_url","query","display","List_List","_this","Details_Details","e","preventDefault","_this$state","getData","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3c7f24f.chunk.js","sourcesContent":["export const recipes = [\r\n    {\r\n      recipe_id: 35382,\r\n      image_url:\r\n        \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n      title: \"Jalapeno Popper Grilled Cheese Sandwich\",\r\n      publisher: \"Closet Cooking\",\r\n      source_url:\r\n        \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n    },\r\n    {\r\n      recipe_id: 35383,\r\n      image_url:\r\n        \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n      title: \"Jalapeno Popper Grilled Cheese Sandwich\",\r\n      publisher: \"Closet Cooking\",\r\n      source_url:\r\n        \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n    },\r\n    {\r\n      recipe_id: 35384,\r\n      image_url:\r\n        \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n      title: \"Jalapeno Popper Grilled Cheese Sandwich\",\r\n      publisher: \"Closet Cooking\",\r\n      source_url:\r\n        \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n    }\r\n  ];","export const recipe = {\r\n    f2f_url: \"http://food2fork.com/view/35382\",\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    ingredients: [\r\n      \"2 jalapeno peppers, cut in half lengthwise and seeded\",\r\n      \"2 slices sour dough bread\",\r\n      \"1 tablespoon butter, room temperature\",\r\n      \"2 tablespoons cream cheese, room temperature\",\r\n      \"1/2 cup jack and cheddar cheese, shredded\",\r\n      \"1 tablespoon tortilla chips, crumbled\"\r\n    ],\r\n    publisher: \"Closet Cooking\",\r\n    publisher_url: \"http://closetcooking.com\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\",\r\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\"\r\n  };","import React, { Component } from 'react'\r\nimport {recipe } from './tempDetails'\r\nimport {recipes} from './tempList'\r\n\r\n\r\nexport default class Details extends Component {\r\n state={\r\n   recipe:recipe,\r\n }\r\n\r\n async componentDidMount() \r\n  {\r\n     try {\r\n      const data = await fetch(`https://www.food2fork.com/api/get?key=7a1b014f00c830e5a47cc53ee58e6a80&rId=${this.props.id}`)\r\n      const jsonData=await data.json()\r\n  \r\n       this.setState({\r\n         recipe:jsonData.recipe\r\n       })\r\n \r\n     \r\n \r\n     }catch (error){\r\n      console.log(error)\r\n     }\r\n   \r\n   }\r\n\r\nDetails=id=>{\r\n  console.log(id)\r\n}\r\n\r\n\r\n\r\n\r\n  render() {\r\n // console.log(this.state.recipe)\r\n\r\n  const {handleIndex}=this.props\r\n\r\n  const {ingredients,publisher,publisher_url,source_url,title,image_url}=this.state.recipe\r\n    return (\r\n     <React.Fragment>\r\n     <div className=\"container\">\r\n     <div className=\"row\">\r\n     <div className=\"mx-auto col-md-6 my-5\">\r\n      <button onClick={()=>handleIndex(1)} className=\"btn btn-warning mb-2 text-capitalize\">back to recipe list</button>\r\n      <img src={image_url} className=\"d-block w-100 my-3\" alt=\"\"/>\r\n     \r\n     </div>\r\n\r\n     <div className=\"mx-auto col-md-6 my-5\">\r\n      <h6 className=\"text-uppercase\">{title}</h6>\r\n      <h6 className=\"text-warning text-capitalize text-slanted\"> Provided by : {publisher}</h6>\r\n       <a href={publisher_url}\r\n       target=\"_blank\"\r\n       rel=\"nooopener noreferrer\"\r\n       className=\"btn btn-primary mt-2 text-capitalize mr-3\"\r\n       >publisher webpage</a>\r\n\r\n       <a href={source_url}\r\n       target=\"_blank\"\r\n       rel=\"nooopener noreferrer\"\r\n       className=\"btn btn-success mt-2 text-capitalize\"\r\n       >recipe url</a>\r\n       <ul className=\"list-group mt-4\">\r\n       <h2 className=\"my-4\">Ingredents</h2>\r\n        {\r\n          ingredients.map((val,index)=>{\r\n            return <li key={index} className=\"list-group-item my-2\">{val}</li>\r\n          })\r\n        }\r\n       </ul>\r\n\r\n\r\n     </div>\r\n\r\n     </div>\r\n     </div>   \r\n\r\n     </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Details from './Details';\r\n\r\nexport default class Recipe extends Component {\r\n  render() {\r\n    const {recipe_id,image_url,title,publisher,source_url}=this.props.recipe\r\n   const {handleDetails}=this.props\r\n    return (\r\n      <React.Fragment>\r\n       <div className=\"col-12 col-lg-4 col-md-6 col-xs-12 mx-auto m-3\">  \r\n        <div className=\"card\">\r\n        <img src={image_url} style={{height:'14rem'}}alt=\"\" className=\"card-img-top\"/>\r\n        <div className=\"card-body text-capitalize\">\r\n        <h6>{title}</h6>\r\n        <h6 className=\"text-warning text-slanted\">Provided by :{publisher}</h6>\r\n       </div>\r\n        <div class=\"card-footer text-muted d-flex dispaly-content-between\">\r\n     <button onClick={()=>handleDetails(recipe_id,0)} className=\"btn btn-primary text-capitalize\">Details</button>\r\n     <a href={source_url} className=\"btn btn-success mx-2 text-capitalize\" target=\"_blank\">Recipe URL</a>\r\n\r\n      </div>\r\n        </div>\r\n       \r\n  \r\n\r\n       </div>\r\n       </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Search extends Component {\r\n  render() {\r\n    const {handlechange,hundleSubmit,value}=this.props\r\n    return (\r\n      <React.Fragment>\r\n       \r\n       <div className=\"container pt-5 mx-auto\">\r\n       <div className=\"row\">\r\n       <div className=\"col-10 mx-auto col-md-8 text-center\">\r\n       <h1 className=\"text-slanted text-capitalize\">\r\n       search fro recipe with <strong> <div className=\"text-danger\">\r\n       food2Fork\r\n       </div></strong>\r\n       </h1>\r\n\r\n       <form className=\"mt-4\"  onSubmit={hundleSubmit}  className=\"text-capitalize\">\r\n       <label>type recipes...</label>\r\n       <div className=\"input-group\">\r\n       <input onChange={handlechange} \r\n       className=\"form-control\" value={value}\r\n        type=\"text\" name=\"search\" \r\n       placeholder=\"chiken,onions,carrots...\"/>\r\n       <div className=\"input-group-append\">\r\n       <button  type=\"submit\" className=\"input-group-text bg-primary text-white\">\r\n       <i className=\"fas fa-search\"></i>\r\n       </button>\r\n       </div>\r\n       </div>\r\n       </form>\r\n       \r\n       </div>\r\n       </div> \r\n       </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Recipe from './Recipe'\r\nimport Search from './Search'\r\n\r\nexport default class List extends Component {\r\n  render() {\r\n    //console.log(this.props.recipes)\r\n    const {recipes,handleDetails,handlechange,hundleSubmit,value}=this.props\r\n   // const {handleDetails}=this.props\r\n\r\n    return (\r\n\r\n      <React.Fragment>\r\n      <Search handlechange={handlechange} value={value} hundleSubmit={hundleSubmit} />\r\n     <div className=\"container\">\r\n      <div className=\"row text-center my-5\">\r\n       <div className=\"col-10 mx-auto col-nd-6 text-center text-uppercase mb-3\">\r\n       <h1>Recies List</h1>\r\n       </div>\r\n       </div>\r\n       </div>\r\n  <div className=\"row p-4\">\r\n  {\r\n     recipes.map(recipe=>{\r\n   return  (  \r\n    <Recipe key={recipe.recipe_id}  handleDetails={handleDetails} recipe={recipe}/> \r\n    )\r\n\r\n    })\r\n  }\r\n  </div>\r\n     \r\n \r\n     \r\n     \r\n     \r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n//import Recipe from './componets/Recipe'\nimport {recipes} from './componets/tempList'\nimport List from './componets/List'\nimport Details from './componets/Details'\n\n\n\n\nclass App extends Component {\n  state={\n    recipes:recipes,\n    url:'https://www.food2fork.com/api/search?key=7a1b014f00c830e5a47cc53ee58e6a80&q=chicken%20breast&page=2 ',\n    details_id:35389,\n    pageN:1,\n    search:'',\n    base_url:'https://www.food2fork.com/api/search?key=7a1b014f00c830e5a47cc53ee58e6a80&q=chicken%20breast&page=2',\n    query:'&q='\n  }\n\n\n\n  display=(index)=>{\n    switch(index){\n      default:\n      case 1:\n      return (<List handlechange={this.handlechange} hundleSubmit={this.hundleSubmit} handleDetails={this.handleDetails}  recipes={this.state.recipes} value={this.state.search}/> )\n      case 0:\n      return ( <Details  handleIndex={this.handleIndex}  id={this.state.details_id} />)\n    }\n  }\n\n  handleIndex=index=>{\n    this.setState({\n      pageN:index\n    })\n  }\n\n  handleDetails=(id,index)=>{\n    // console.log(id,index)\n    this.setState({\n      pageN:index,\n      details_id:id\n\n    })\n  }\n\n  handlechange=e=>{\n    //console.log('hellow from handle change')\n\n    this.setState({\n      search:e.target.value\n    },()=>{\n     // console.log(this.state.search)\n    })\n  }\n  hundleSubmit=e=>{\n    e.preventDefault()\n //  console.log('form submitted')\n\n const {base_url,query,search}=this.state\n \n  this.setState({\n    url:`${base_url}${query}${search}`,\n    search:''\n  },()=>{\n   \n\n  })\n\n  }\n\n componentDidMount(){\n\n this.getData()\n\n  }\n\n  async getData(){\n\n    try {\n     const data = await fetch(this.state.url)\n     const jsonData=await data.json()\n \n      this.setState({\n        recipes:jsonData.recipes\n      })\n\n    \n\n    }catch (error){\n     console.log(error)\n    }\n  \n  }\n\n\n  render() {\n    //console.log(this.state.recipes)\n    return (\n     <React.Fragment>\n    \n      {this.display(this.state.pageN)}\n    \n     </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}